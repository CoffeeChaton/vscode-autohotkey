{
    "fileTypes": [
        "log"
    ],
    "name": "AutoHotkey",
    "patterns": [
        {
            "include": "#escaped-char"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment.log"
                }
            },
            "match": "(?:^|\\s+)(;).*",
            "name": "comment.line.semicolon.log"
        },
        {
            "captures": {
                "1": {
                    "name": "string.parameter.import.log"
                }
            },
            "match": "\\s*#(?i:include(?:Again)?)\\b\\s*(.*)$",
            "name": "keyword.control.import.log"
        },
        {
            "include": "#stringQuotedDouble"
        },
        {
            "match": "\\b\\w+\\(\\.?\\)",
            "name": "entity.name.function.log"
        },
        {
            "match": "\\b\\w+\\(",
            "name": "entity.name.function.log"
        },
        {
            "include": "#numbers"
        },
        {
            "match": "\\[neko\\-help\\]",
            "name": "constant.numeric.log"
        }
    ],
    "repository": {
        "escaped-char": {
            "patterns": [
                {
                    "match": "`[,%`;nrbtvaf]",
                    "name": "constant.character.escape.ahk"
                },
                {
                    "match": "`.",
                    "name": "invalid.illegal.unknown.character.escape.ahk"
                }
            ]
        },
        "stringQuotedDouble": {
            "begin": "(\")",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.string.begin.log"
                }
            },
            "end": "(\")(?!\")|^",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.string.end.log"
                }
            },
            "name": "string.quoted.double.log",
            "patterns": [
                {
                    "match": "\"\"",
                    "name": "constant.character.escape.log"
                },
                {
                    "match": "`[,%`;nrbtvaf:]",
                    "name": "constant.character.escape.log"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "match": "\\b(?<!\\.)(0[xX])[0-9a-fA-F]+\\b(?!\\.)",
                    "name": "constant.numeric.hexadecimal.ahk",
                    "captures": { "1": { "name": "keyword.other.unit.hexadecimal.ahk" } }
                },
                {
                    "match": "\\b(?<!\\.)[0-9]+\\b(?!\\.)",
                    "name": "constant.numeric.decimal.integers.ahk"
                },
                {
                    "match": "\\b(?<!\\.)[0-9]+\\.[0-9]+(?:([eE])[+-]?[0-9]+)?\\b(?!\\.)",
                    "name": "constant.numeric.decimal.scientific.ahk",
                    "captures": { "1": { "name": "keyword.other.unit.hexadecimal.ahk" } }
                },
                {
                    "match": "\\s\\.[0-9]+(?:([eE])[+-]?[0-9]+)?\\b(?!\\.)",
                    "name": "constant.numeric.decimal.scientific.ahk",
                    "captures": { "1": { "name": "keyword.other.unit.hexadecimal.ahk" } }
                }
            ]
        }
    },
    "scopeName": "source.log"
}
