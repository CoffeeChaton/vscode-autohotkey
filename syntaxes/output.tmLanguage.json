{
    "fileTypes": [
        "ahk"
    ],
    "name": "AutoHotkey",
    "patterns": [
        {
            "match": "`[,%`;nrbtvaf:]",
            "name": "constant.character.escape.ahk"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment.ahk"
                }
            },
            "match": "(?:^|\\s+)(;).*",
            "name": "comment.line.semicolon.ahk"
        },
        {
            "captures": {
                "1": {
                    "name": "string.parameter.import.ahk"
                }
            },
            "match": "#\\b(?i:include|includeagain)\\b(.*)$",
            "name": "keyword.control.import.ahk"
        },
        {
            "include": "#stringQuotedDouble"
        },
        {
            "match": "\\w\\w*\\(\\)",
            "name": "entity.name.function.log"
        },
        {
            "match": "(?x) \\b\r\n((0(x|X)[0-9a-fA-F]*)\r\n|(\r\n  ([0-9]+\\.?[0-9]*)\r\n  |(\\.[0-9]+)\r\n )((e|E)(\\+|-)?[0-9]+)?\r\n)\\b\r\n",
            "name": "constant.numeric.ahk"
        }
    ],
    "repository": {
        "stringQuotedDouble": {
            "begin": "(\")",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.string.begin.log"
                }
            },
            "end": "(\")(?!\")|^",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.string.end.log"
                }
            },
            "name": "string.quoted.double.log",
            "patterns": [
                {
                    "match": "\"\"",
                    "name": "constant.character.escape.log"
                },
                {
                    "match": "`[,%`;nrbtvaf:]",
                    "name": "constant.character.escape.log"
                }
            ]
        }
    },
    "scopeName": "source.log"
}
